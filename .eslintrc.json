{
	"env": {
		"es2021": true,
		"node": true,
		"browser": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"globals": {
		"after": "readonly",
		"before": "readonly",
		"Chai": "readonly",
		"chai": "readonly",
		"describe": "readonly",
		"expect": "readonly",
		"it": "readonly"
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint"
	],
	"rules": {
		"arrow-parens": ["error", "always"],
		"brace-style": ["error", "stroustrup"],
		"comma-dangle": ["error", "always-multiline"],
		"comma-style": ["error", "last"],
		"constructor-super": "error",
		"curly": "error",
		"eol-last": ["error", "always"],
		"eqeqeq": ["error", "always"],
		"func-call-spacing": ["error", "never"],
		"indent": "off",
		"key-spacing": ["error", { "multiLine": { "beforeColon": false, "afterColon": true }, "align": { "beforeColon": false, "afterColon": true, "on": "value" } }],
		"keyword-spacing": ["error", { "after": true, "before": true }],
		"linebreak-style": ["error", "unix"],
		"lines-between-class-members": ["off"],
		"new-cap": ["error", { "newIsCap": true }],
		"no-alert": "error",
		"no-class-assign": "error",
		"no-cond-assign": "error",
		"no-console": ["error", { "allow": ["warn", "error"] }],
		"no-const-assign": "error",
		"no-debugger": "error",
		"no-extra-semi": "error",
		"no-func-assign": "error",
		"no-global-assign": "error",
		"no-multiple-empty-lines": ["error", { "max": 2 }],
		"no-shadow": "off",
		"no-this-before-super": "error",
		"no-trailing-spaces": "error",
		"no-undef": "off", // TS takes care of it
		"no-unreachable": "error",
		"no-useless-constructor": "error",
		"no-var": "error",
		"object-curly-newline": ["error", { "consistent": true }],
		"object-curly-spacing": ["error", "always"],
		"one-var-declaration-per-line": ["error", "always"],
		"one-var": ["error", "never"],
		"operator-linebreak": ["error", "before"],
		"padded-blocks": ["error", "never"],
		"padding-line-between-statements": "off",
		"prefer-const": "error",
		"prefer-rest-params": "error",
		"quotes": ["error", "single"],
		"rest-spread-spacing": ["error", "never"],
		"semi-spacing": ["error", { "before": false, "after": true }],
		"semi-style": ["error", "last"],
		"semi": "off",
		"space-before-blocks": "error",
		"space-before-function-paren": "off",
		"space-in-parens": ["error", "never"],
		"space-infix-ops": "error",
		"space-unary-ops": ["error", { "words": true, "nonwords": false }],
		"spaced-comment": ["error", "always", { "markers": ["/"] }],
		"template-curly-spacing": ["error", "never"],
		"template-tag-spacing": ["error", "never"],

		"@typescript-eslint/array-type": ["error", { "default": "array" }],
		"@typescript-eslint/ban-ts-comment": "off",
		"@typescript-eslint/explicit-function-return-type": ["error"],
		"@typescript-eslint/indent": ["error", "tab", { "SwitchCase": 1 }],
		"@typescript-eslint/lines-between-class-members": ["error", "always", { "exceptAfterOverload": true, "exceptAfterSingleLine": true }],
		"@typescript-eslint/member-delimiter-style": ["error", { "multiline": { "delimiter": "comma", "requireLast": true }, "singleline": { "delimiter": "comma", "requireLast": false }, "multilineDetection": "brackets" }],
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/no-shadow": ["error", { "ignoreTypeValueShadow": true, "ignoreFunctionTypeParameterNameValueShadow": true }],
		"@typescript-eslint/padding-line-between-statements": ["error",
			{ "blankLine": "always", "prev": ["var", "let", "const", "import"], "next": "*" },
			{ "blankLine": "any", "prev": ["var", "let", "const"], "next": ["var", "let", "const"] },
			{ "blankLine": "any", "prev": "import", "next": "import" },
			{ "blankLine": "always", "prev": "*", "next": ["return", "export", "interface", "type"] },
			{ "blankLine": "any", "prev": "export", "next": "export" },
			{ "blankLine": "any", "prev": ["interface", "type"], "next": ["interface", "type"] }
		],
		"@typescript-eslint/semi": ["error", "always", { "omitLastInOneLineBlock": true }],
		"@typescript-eslint/space-before-function-paren": ["error", { "anonymous": "always", "named": "never", "asyncArrow": "always" }],
		"@typescript-eslint/triple-slash-reference": "off"
	}
}
